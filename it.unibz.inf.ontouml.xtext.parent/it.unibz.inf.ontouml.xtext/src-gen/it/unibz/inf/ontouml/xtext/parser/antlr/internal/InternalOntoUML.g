/*
 * generated by Xtext 2.13.0
 */
grammar InternalOntoUML;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package it.unibz.inf.ontouml.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package it.unibz.inf.ontouml.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import it.unibz.inf.ontouml.xtext.services.OntoUMLGrammarAccess;

}

@parser::members {

 	private OntoUMLGrammarAccess grammarAccess;

    public InternalOntoUMLParser(TokenStream input, OntoUMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected OntoUMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleModelElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"it.unibz.inf.ontouml.xtext.OntoUML.ModelElement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleModelElement
entryRuleModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelElementRule()); }
	iv_ruleModelElement=ruleModelElement
	{ $current=$iv_ruleModelElement.current; }
	EOF;

// Rule ModelElement
ruleModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getModelElementAccess().getOntoUMLClassParserRuleCall_0());
		}
		this_OntoUMLClass_0=ruleOntoUMLClass
		{
			$current = $this_OntoUMLClass_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getModelElementAccess().getRegularAssociationParserRuleCall_1());
		}
		this_RegularAssociation_1=ruleRegularAssociation
		{
			$current = $this_RegularAssociation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getModelElementAccess().getDerivationAssociationParserRuleCall_2());
		}
		this_DerivationAssociation_2=ruleDerivationAssociation
		{
			$current = $this_DerivationAssociation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getModelElementAccess().getGeneralizationParserRuleCall_3());
		}
		this_Generalization_3=ruleGeneralization
		{
			$current = $this_Generalization_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getModelElementAccess().getGeneralizationSetParserRuleCall_4());
		}
		this_GeneralizationSet_4=ruleGeneralizationSet
		{
			$current = $this_GeneralizationSet_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOntoUMLClass
entryRuleOntoUMLClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOntoUMLClassRule()); }
	iv_ruleOntoUMLClass=ruleOntoUMLClass
	{ $current=$iv_ruleOntoUMLClass.current; }
	EOF;

// Rule OntoUMLClass
ruleOntoUMLClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='class'
			{
				newLeafNode(otherlv_0, grammarAccess.getOntoUMLClassAccess().getClassKeyword_0_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getOntoUMLClassAccess().get_typeEndurantTypeEnumRuleCall_0_1_0_0());
						}
						lv__type_1_0=ruleEndurantType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOntoUMLClassRule());
							}
							set(
								$current,
								"_type",
								lv__type_1_0,
								"it.unibz.inf.ontouml.xtext.OntoUML.EndurantType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_2='class'
				{
					newLeafNode(otherlv_2, grammarAccess.getOntoUMLClassAccess().getClassKeyword_0_1_1());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getOntoUMLClassAccess().get_typeEndurantTypeEnumRuleCall_0_2_0());
					}
					lv__type_3_0=ruleEndurantType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOntoUMLClassRule());
						}
						set(
							$current,
							"_type",
							lv__type_3_0,
							"it.unibz.inf.ontouml.xtext.OntoUML.EndurantType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOntoUMLClassAccess().getNameStringOrIDParserRuleCall_1_0());
				}
				lv_name_4_0=ruleStringOrID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOntoUMLClassRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"it.unibz.inf.ontouml.xtext.OntoUML.StringOrID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='aka'
			{
				newLeafNode(otherlv_5, grammarAccess.getOntoUMLClassAccess().getAkaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOntoUMLClassAccess().getAliasStringOrIDParserRuleCall_2_1_0());
					}
					lv_alias_6_0=ruleStringOrID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOntoUMLClassRule());
						}
						set(
							$current,
							"alias",
							lv_alias_6_0,
							"it.unibz.inf.ontouml.xtext.OntoUML.StringOrID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRegularAssociation
entryRuleRegularAssociation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularAssociationRule()); }
	iv_ruleRegularAssociation=ruleRegularAssociation
	{ $current=$iv_ruleRegularAssociation.current; }
	EOF;

// Rule RegularAssociation
ruleRegularAssociation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='association'
			{
				newLeafNode(otherlv_0, grammarAccess.getRegularAssociationAccess().getAssociationKeyword_0_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRegularAssociationAccess().get_typeRelationTypeEnumRuleCall_0_1_0_0());
						}
						lv__type_1_0=ruleRelationType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRegularAssociationRule());
							}
							set(
								$current,
								"_type",
								lv__type_1_0,
								"it.unibz.inf.ontouml.xtext.OntoUML.RelationType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_2='association'
				{
					newLeafNode(otherlv_2, grammarAccess.getRegularAssociationAccess().getAssociationKeyword_0_1_1());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularAssociationAccess().get_typeRelationTypeEnumRuleCall_0_2_0());
					}
					lv__type_3_0=ruleRelationType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularAssociationRule());
						}
						set(
							$current,
							"_type",
							lv__type_3_0,
							"it.unibz.inf.ontouml.xtext.OntoUML.RelationType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRegularAssociationAccess().getNameStringOrIDParserRuleCall_1_0());
				}
				lv_name_4_0=ruleStringOrID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegularAssociationRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"it.unibz.inf.ontouml.xtext.OntoUML.StringOrID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='aka'
			{
				newLeafNode(otherlv_5, grammarAccess.getRegularAssociationAccess().getAkaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularAssociationAccess().getAliasStringOrIDParserRuleCall_2_1_0());
					}
					lv_alias_6_0=ruleStringOrID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularAssociationRule());
						}
						set(
							$current,
							"alias",
							lv_alias_6_0,
							"it.unibz.inf.ontouml.xtext.OntoUML.StringOrID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRegularAssociationAccess().getSourceEndAssociationEndParserRuleCall_3_0());
				}
				lv_sourceEnd_7_0=ruleAssociationEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegularAssociationRule());
					}
					set(
						$current,
						"sourceEnd",
						lv_sourceEnd_7_0,
						"it.unibz.inf.ontouml.xtext.OntoUML.AssociationEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularAssociationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRegularAssociationAccess().getSourceOntoUMLClassCrossReference_4_0());
				}
				ruleStringOrID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRegularAssociationAccess().getTargetEndAssociationEndParserRuleCall_5_0());
				}
				lv_targetEnd_9_0=ruleAssociationEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegularAssociationRule());
					}
					set(
						$current,
						"targetEnd",
						lv_targetEnd_9_0,
						"it.unibz.inf.ontouml.xtext.OntoUML.AssociationEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularAssociationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRegularAssociationAccess().getTargetOntoUMLClassCrossReference_6_0());
				}
				ruleStringOrID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDerivationAssociation
entryRuleDerivationAssociation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDerivationAssociationRule()); }
	iv_ruleDerivationAssociation=ruleDerivationAssociation
	{ $current=$iv_ruleDerivationAssociation.current; }
	EOF;

// Rule DerivationAssociation
ruleDerivationAssociation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='derivation'
		{
			newLeafNode(otherlv_0, grammarAccess.getDerivationAssociationAccess().getDerivationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDerivationAssociationAccess().getNameStringOrIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleStringOrID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDerivationAssociationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"it.unibz.inf.ontouml.xtext.OntoUML.StringOrID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='aka'
			{
				newLeafNode(otherlv_2, grammarAccess.getDerivationAssociationAccess().getAkaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDerivationAssociationAccess().getAliasStringOrIDParserRuleCall_2_1_0());
					}
					lv_alias_3_0=ruleStringOrID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDerivationAssociationRule());
						}
						set(
							$current,
							"alias",
							lv_alias_3_0,
							"it.unibz.inf.ontouml.xtext.OntoUML.StringOrID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getDerivationAssociationAccess().getSourceEndAssociationEndParserRuleCall_3_0_0_0());
										}
										lv_sourceEnd_5_0=ruleAssociationEnd
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getDerivationAssociationRule());
											}
											set(
												$current,
												"sourceEnd",
												lv_sourceEnd_5_0,
												"it.unibz.inf.ontouml.xtext.OntoUML.AssociationEnd");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getDerivationAssociationRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getDerivationAssociationAccess().getDerivingAssociationRegularAssociationCrossReference_3_0_1_0());
										}
										ruleStringOrID
										{
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getDerivationAssociationAccess().getTargetEndAssociationEndParserRuleCall_3_1_0_0());
										}
										lv_targetEnd_7_0=ruleAssociationEnd
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getDerivationAssociationRule());
											}
											set(
												$current,
												"targetEnd",
												lv_targetEnd_7_0,
												"it.unibz.inf.ontouml.xtext.OntoUML.AssociationEnd");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getDerivationAssociationRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getDerivationAssociationAccess().getDerivedClassOntoUMLClassCrossReference_3_1_1_0());
										}
										ruleStringOrID
										{
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleAssociationEnd
entryRuleAssociationEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociationEndRule()); }
	iv_ruleAssociationEnd=ruleAssociationEnd
	{ $current=$iv_ruleAssociationEnd.current; }
	EOF;

// Rule AssociationEnd
ruleAssociationEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAssociationEndAccess().getAssociationEndAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociationEndAccess().getAggregationKindAggregationKindEnumRuleCall_1_0());
				}
				lv_aggregationKind_1_0=ruleAggregationKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociationEndRule());
					}
					set(
						$current,
						"aggregationKind",
						lv_aggregationKind_1_0,
						"it.unibz.inf.ontouml.xtext.OntoUML.AggregationKind");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getAssociationEndAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					lv_lowerBound_3_0=RULE_CARDINALITY
					{
						newLeafNode(lv_lowerBound_3_0, grammarAccess.getAssociationEndAccess().getLowerBoundCARDINALITYTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssociationEndRule());
						}
						setWithLastConsumed(
							$current,
							"lowerBound",
							lv_lowerBound_3_0,
							"it.unibz.inf.ontouml.xtext.OntoUML.CARDINALITY");
					}
				)
			)
			otherlv_4='..'
			{
				newLeafNode(otherlv_4, grammarAccess.getAssociationEndAccess().getFullStopFullStopKeyword_2_2());
			}
			(
				(
					lv_upperBound_5_0=RULE_CARDINALITY
					{
						newLeafNode(lv_upperBound_5_0, grammarAccess.getAssociationEndAccess().getUpperBoundCARDINALITYTerminalRuleCall_2_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssociationEndRule());
						}
						setWithLastConsumed(
							$current,
							"upperBound",
							lv_upperBound_5_0,
							"it.unibz.inf.ontouml.xtext.OntoUML.CARDINALITY");
					}
				)
			)
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getAssociationEndAccess().getRightSquareBracketKeyword_2_4());
			}
		)?
	)
;

// Entry rule entryRuleGeneralization
entryRuleGeneralization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralizationRule()); }
	iv_ruleGeneralization=ruleGeneralization
	{ $current=$iv_ruleGeneralization.current; }
	EOF;

// Rule Generalization
ruleGeneralization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='generalization'
		{
			newLeafNode(otherlv_0, grammarAccess.getGeneralizationAccess().getGeneralizationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralizationAccess().getNameStringOrIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleStringOrID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralizationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"it.unibz.inf.ontouml.xtext.OntoUML.StringOrID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='aka'
			{
				newLeafNode(otherlv_2, grammarAccess.getGeneralizationAccess().getAkaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeneralizationAccess().getAliasStringOrIDParserRuleCall_2_1_0());
					}
					lv_alias_3_0=ruleStringOrID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeneralizationRule());
						}
						set(
							$current,
							"alias",
							lv_alias_3_0,
							"it.unibz.inf.ontouml.xtext.OntoUML.StringOrID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGeneralizationAccess().getGenericOntoUMLClassCrossReference_3_0());
				}
				ruleStringOrID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGeneralizationAccess().getSpecificOntoUMLClassCrossReference_4_0());
				}
				ruleStringOrID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGeneralizationSet
entryRuleGeneralizationSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralizationSetRule()); }
	iv_ruleGeneralizationSet=ruleGeneralizationSet
	{ $current=$iv_ruleGeneralizationSet.current; }
	EOF;

// Rule GeneralizationSet
ruleGeneralizationSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 0);
					}
								({true}?=>((
									lv_isDisjoint_1_0='disjoint'
									{
										newLeafNode(lv_isDisjoint_1_0, grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getGeneralizationSetRule());
										}
										setWithLastConsumed($current, "isDisjoint", true, "disjoint");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 1);
					}
								({true}?=>((
									lv_isComplete_2_0='complete'
									{
										newLeafNode(lv_isComplete_2_0, grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_0_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getGeneralizationSetRule());
										}
										setWithLastConsumed($current, "isComplete", true, "complete");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
				}
		)
		otherlv_3='generalizationset'
		{
			newLeafNode(otherlv_3, grammarAccess.getGeneralizationSetAccess().getGeneralizationsetKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralizationSetAccess().getNameStringOrIDParserRuleCall_2_0());
				}
				lv_name_4_0=ruleStringOrID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralizationSetRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"it.unibz.inf.ontouml.xtext.OntoUML.StringOrID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='aka'
			{
				newLeafNode(otherlv_5, grammarAccess.getGeneralizationSetAccess().getAkaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeneralizationSetAccess().getAliasStringOrIDParserRuleCall_3_1_0());
					}
					lv_alias_6_0=ruleStringOrID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeneralizationSetRule());
						}
						set(
							$current,
							"alias",
							lv_alias_6_0,
							"it.unibz.inf.ontouml.xtext.OntoUML.StringOrID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getGeneralizationSetAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralizationSetRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationCrossReference_5_0());
				}
				ruleStringOrID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getGeneralizationSetAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleStringOrID
entryRuleStringOrID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStringOrIDRule()); }
	iv_ruleStringOrID=ruleStringOrID
	{ $current=$iv_ruleStringOrID.current.getText(); }
	EOF;

// Rule StringOrID
ruleStringOrID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getStringOrIDAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getStringOrIDAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule EndurantType
ruleEndurantType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='kind'
			{
				$current = grammarAccess.getEndurantTypeAccess().getKindEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEndurantTypeAccess().getKindEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='relatorKind'
			{
				$current = grammarAccess.getEndurantTypeAccess().getRelatorKindEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEndurantTypeAccess().getRelatorKindEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='modeKind'
			{
				$current = grammarAccess.getEndurantTypeAccess().getModeKindEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEndurantTypeAccess().getModeKindEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='qualityKind'
			{
				$current = grammarAccess.getEndurantTypeAccess().getQualityKindEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEndurantTypeAccess().getQualityKindEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='subkind'
			{
				$current = grammarAccess.getEndurantTypeAccess().getSubkindEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getEndurantTypeAccess().getSubkindEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='role'
			{
				$current = grammarAccess.getEndurantTypeAccess().getRoleEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getEndurantTypeAccess().getRoleEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='phase'
			{
				$current = grammarAccess.getEndurantTypeAccess().getPhaseEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getEndurantTypeAccess().getPhaseEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='category'
			{
				$current = grammarAccess.getEndurantTypeAccess().getCategoryEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getEndurantTypeAccess().getCategoryEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='mixin'
			{
				$current = grammarAccess.getEndurantTypeAccess().getMixinEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getEndurantTypeAccess().getMixinEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='roleMixin'
			{
				$current = grammarAccess.getEndurantTypeAccess().getRoleMixinEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getEndurantTypeAccess().getRoleMixinEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='phaseMixin'
			{
				$current = grammarAccess.getEndurantTypeAccess().getPhaseMixinEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getEndurantTypeAccess().getPhaseMixinEnumLiteralDeclaration_10());
			}
		)
	)
;

// Rule RelationType
ruleRelationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='comparative'
			{
				$current = grammarAccess.getRelationTypeAccess().getComparativeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRelationTypeAccess().getComparativeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='material'
			{
				$current = grammarAccess.getRelationTypeAccess().getMaterialEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRelationTypeAccess().getMaterialEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='historical'
			{
				$current = grammarAccess.getRelationTypeAccess().getHistoricalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRelationTypeAccess().getHistoricalEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='characterization'
			{
				$current = grammarAccess.getRelationTypeAccess().getCharacterizationEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRelationTypeAccess().getCharacterizationEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='mediation'
			{
				$current = grammarAccess.getRelationTypeAccess().getMediationEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRelationTypeAccess().getMediationEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='external dependence'
			{
				$current = grammarAccess.getRelationTypeAccess().getExternalDepedenceEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getRelationTypeAccess().getExternalDepedenceEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule AggregationKind
ruleAggregationKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='none'
			{
				$current = grammarAccess.getAggregationKindAccess().getNoneEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAggregationKindAccess().getNoneEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Aggregation'
			{
				$current = grammarAccess.getAggregationKindAccess().getAggregationEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAggregationKindAccess().getAggregationEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='composition'
			{
				$current = grammarAccess.getAggregationKindAccess().getCompositionEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAggregationKindAccess().getCompositionEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_CARDINALITY : (RULE_INT|'*');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
