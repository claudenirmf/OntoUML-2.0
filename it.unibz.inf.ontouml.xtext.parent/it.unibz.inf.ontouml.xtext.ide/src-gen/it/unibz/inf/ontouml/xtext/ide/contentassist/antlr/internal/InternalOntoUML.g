/*
 * generated by Xtext 2.13.0
 */
grammar InternalOntoUML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package it.unibz.inf.ontouml.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package it.unibz.inf.ontouml.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import it.unibz.inf.ontouml.xtext.services.OntoUMLGrammarAccess;

}
@parser::members {
	private OntoUMLGrammarAccess grammarAccess;

	public void setGrammarAccess(OntoUMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
		(rule__Model__ElementsAssignment)*
		{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelElement
entryRuleModelElement
:
{ before(grammarAccess.getModelElementRule()); }
	 ruleModelElement
{ after(grammarAccess.getModelElementRule()); } 
	 EOF 
;

// Rule ModelElement
ruleModelElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelElementAccess().getAlternatives()); }
		(rule__ModelElement__Alternatives)
		{ after(grammarAccess.getModelElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOntoUMLClass
entryRuleOntoUMLClass
:
{ before(grammarAccess.getOntoUMLClassRule()); }
	 ruleOntoUMLClass
{ after(grammarAccess.getOntoUMLClassRule()); } 
	 EOF 
;

// Rule OntoUMLClass
ruleOntoUMLClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getGroup()); }
		(rule__OntoUMLClass__Group__0)
		{ after(grammarAccess.getOntoUMLClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegularAssociation
entryRuleRegularAssociation
:
{ before(grammarAccess.getRegularAssociationRule()); }
	 ruleRegularAssociation
{ after(grammarAccess.getRegularAssociationRule()); } 
	 EOF 
;

// Rule RegularAssociation
ruleRegularAssociation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegularAssociationAccess().getGroup()); }
		(rule__RegularAssociation__Group__0)
		{ after(grammarAccess.getRegularAssociationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDerivationAssociation
entryRuleDerivationAssociation
:
{ before(grammarAccess.getDerivationAssociationRule()); }
	 ruleDerivationAssociation
{ after(grammarAccess.getDerivationAssociationRule()); } 
	 EOF 
;

// Rule DerivationAssociation
ruleDerivationAssociation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDerivationAssociationAccess().getGroup()); }
		(rule__DerivationAssociation__Group__0)
		{ after(grammarAccess.getDerivationAssociationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssociationEnd
entryRuleAssociationEnd
:
{ before(grammarAccess.getAssociationEndRule()); }
	 ruleAssociationEnd
{ after(grammarAccess.getAssociationEndRule()); } 
	 EOF 
;

// Rule AssociationEnd
ruleAssociationEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationEndAccess().getGroup()); }
		(rule__AssociationEnd__Group__0)
		{ after(grammarAccess.getAssociationEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralization
entryRuleGeneralization
:
{ before(grammarAccess.getGeneralizationRule()); }
	 ruleGeneralization
{ after(grammarAccess.getGeneralizationRule()); } 
	 EOF 
;

// Rule Generalization
ruleGeneralization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralizationAccess().getGroup()); }
		(rule__Generalization__Group__0)
		{ after(grammarAccess.getGeneralizationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralizationSet
entryRuleGeneralizationSet
:
{ before(grammarAccess.getGeneralizationSetRule()); }
	 ruleGeneralizationSet
{ after(grammarAccess.getGeneralizationSetRule()); } 
	 EOF 
;

// Rule GeneralizationSet
ruleGeneralizationSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getGroup()); }
		(rule__GeneralizationSet__Group__0)
		{ after(grammarAccess.getGeneralizationSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringOrID
entryRuleStringOrID
:
{ before(grammarAccess.getStringOrIDRule()); }
	 ruleStringOrID
{ after(grammarAccess.getStringOrIDRule()); } 
	 EOF 
;

// Rule StringOrID
ruleStringOrID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringOrIDAccess().getAlternatives()); }
		(rule__StringOrID__Alternatives)
		{ after(grammarAccess.getStringOrIDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EndurantType
ruleEndurantType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndurantTypeAccess().getAlternatives()); }
		(rule__EndurantType__Alternatives)
		{ after(grammarAccess.getEndurantTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RelationType
ruleRelationType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationTypeAccess().getAlternatives()); }
		(rule__RelationType__Alternatives)
		{ after(grammarAccess.getRelationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AggregationKind
ruleAggregationKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationKindAccess().getAlternatives()); }
		(rule__AggregationKind__Alternatives)
		{ after(grammarAccess.getAggregationKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getOntoUMLClassParserRuleCall_0()); }
		ruleOntoUMLClass
		{ after(grammarAccess.getModelElementAccess().getOntoUMLClassParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getRegularAssociationParserRuleCall_1()); }
		ruleRegularAssociation
		{ after(grammarAccess.getModelElementAccess().getRegularAssociationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getDerivationAssociationParserRuleCall_2()); }
		ruleDerivationAssociation
		{ after(grammarAccess.getModelElementAccess().getDerivationAssociationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getGeneralizationParserRuleCall_3()); }
		ruleGeneralization
		{ after(grammarAccess.getModelElementAccess().getGeneralizationParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getGeneralizationSetParserRuleCall_4()); }
		ruleGeneralizationSet
		{ after(grammarAccess.getModelElementAccess().getGeneralizationSetParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getClassKeyword_0_0()); }
		'class'
		{ after(grammarAccess.getOntoUMLClassAccess().getClassKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getGroup_0_1()); }
		(rule__OntoUMLClass__Group_0_1__0)
		{ after(grammarAccess.getOntoUMLClassAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOntoUMLClassAccess().get_typeAssignment_0_2()); }
		(rule__OntoUMLClass___typeAssignment_0_2)
		{ after(grammarAccess.getOntoUMLClassAccess().get_typeAssignment_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAssociationAccess().getAssociationKeyword_0_0()); }
		'association'
		{ after(grammarAccess.getRegularAssociationAccess().getAssociationKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegularAssociationAccess().getGroup_0_1()); }
		(rule__RegularAssociation__Group_0_1__0)
		{ after(grammarAccess.getRegularAssociationAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRegularAssociationAccess().get_typeAssignment_0_2()); }
		(rule__RegularAssociation___typeAssignment_0_2)
		{ after(grammarAccess.getRegularAssociationAccess().get_typeAssignment_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOrID__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOrIDAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringOrIDAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStringOrIDAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getStringOrIDAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndurantType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndurantTypeAccess().getKindEnumLiteralDeclaration_0()); }
		('kind')
		{ after(grammarAccess.getEndurantTypeAccess().getKindEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getRelatorKindEnumLiteralDeclaration_1()); }
		('relatorKind')
		{ after(grammarAccess.getEndurantTypeAccess().getRelatorKindEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getModeKindEnumLiteralDeclaration_2()); }
		('modeKind')
		{ after(grammarAccess.getEndurantTypeAccess().getModeKindEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getQualityKindEnumLiteralDeclaration_3()); }
		('qualityKind')
		{ after(grammarAccess.getEndurantTypeAccess().getQualityKindEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getSubkindEnumLiteralDeclaration_4()); }
		('subkind')
		{ after(grammarAccess.getEndurantTypeAccess().getSubkindEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getRoleEnumLiteralDeclaration_5()); }
		('role')
		{ after(grammarAccess.getEndurantTypeAccess().getRoleEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getPhaseEnumLiteralDeclaration_6()); }
		('phase')
		{ after(grammarAccess.getEndurantTypeAccess().getPhaseEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getCategoryEnumLiteralDeclaration_7()); }
		('category')
		{ after(grammarAccess.getEndurantTypeAccess().getCategoryEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getMixinEnumLiteralDeclaration_8()); }
		('mixin')
		{ after(grammarAccess.getEndurantTypeAccess().getMixinEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getRoleMixinEnumLiteralDeclaration_9()); }
		('roleMixin')
		{ after(grammarAccess.getEndurantTypeAccess().getRoleMixinEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getPhaseMixinEnumLiteralDeclaration_10()); }
		('phaseMixin')
		{ after(grammarAccess.getEndurantTypeAccess().getPhaseMixinEnumLiteralDeclaration_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationTypeAccess().getComparativeEnumLiteralDeclaration_0()); }
		('comparative')
		{ after(grammarAccess.getRelationTypeAccess().getComparativeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeAccess().getMaterialEnumLiteralDeclaration_1()); }
		('material')
		{ after(grammarAccess.getRelationTypeAccess().getMaterialEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeAccess().getHistoricalEnumLiteralDeclaration_2()); }
		('historical')
		{ after(grammarAccess.getRelationTypeAccess().getHistoricalEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeAccess().getCharacterizationEnumLiteralDeclaration_3()); }
		('characterization')
		{ after(grammarAccess.getRelationTypeAccess().getCharacterizationEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeAccess().getMediationEnumLiteralDeclaration_4()); }
		('mediation')
		{ after(grammarAccess.getRelationTypeAccess().getMediationEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeAccess().getExternalDepedenceEnumLiteralDeclaration_5()); }
		('external dependence')
		{ after(grammarAccess.getRelationTypeAccess().getExternalDepedenceEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationKindAccess().getNoneEnumLiteralDeclaration_0()); }
		('none')
		{ after(grammarAccess.getAggregationKindAccess().getNoneEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationKindAccess().getAggregationEnumLiteralDeclaration_1()); }
		('Aggregation')
		{ after(grammarAccess.getAggregationKindAccess().getAggregationEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAggregationKindAccess().getCompositionEnumLiteralDeclaration_2()); }
		('composition')
		{ after(grammarAccess.getAggregationKindAccess().getCompositionEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group__0__Impl
	rule__OntoUMLClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getAlternatives_0()); }
	(rule__OntoUMLClass__Alternatives_0)
	{ after(grammarAccess.getOntoUMLClassAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group__1__Impl
	rule__OntoUMLClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getNameAssignment_1()); }
	(rule__OntoUMLClass__NameAssignment_1)
	{ after(grammarAccess.getOntoUMLClassAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getGroup_2()); }
	(rule__OntoUMLClass__Group_2__0)?
	{ after(grammarAccess.getOntoUMLClassAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OntoUMLClass__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_0_1__0__Impl
	rule__OntoUMLClass__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().get_typeAssignment_0_1_0()); }
	(rule__OntoUMLClass___typeAssignment_0_1_0)
	{ after(grammarAccess.getOntoUMLClassAccess().get_typeAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getClassKeyword_0_1_1()); }
	'class'
	{ after(grammarAccess.getOntoUMLClassAccess().getClassKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OntoUMLClass__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_2__0__Impl
	rule__OntoUMLClass__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getAkaKeyword_2_0()); }
	'aka'
	{ after(grammarAccess.getOntoUMLClassAccess().getAkaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getAliasAssignment_2_1()); }
	(rule__OntoUMLClass__AliasAssignment_2_1)
	{ after(grammarAccess.getOntoUMLClassAccess().getAliasAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularAssociation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularAssociation__Group__0__Impl
	rule__RegularAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAssociationAccess().getAlternatives_0()); }
	(rule__RegularAssociation__Alternatives_0)
	{ after(grammarAccess.getRegularAssociationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularAssociation__Group__1__Impl
	rule__RegularAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAssociationAccess().getNameAssignment_1()); }
	(rule__RegularAssociation__NameAssignment_1)
	{ after(grammarAccess.getRegularAssociationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularAssociation__Group__2__Impl
	rule__RegularAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAssociationAccess().getGroup_2()); }
	(rule__RegularAssociation__Group_2__0)?
	{ after(grammarAccess.getRegularAssociationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularAssociation__Group__3__Impl
	rule__RegularAssociation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAssociationAccess().getSourceEndAssignment_3()); }
	(rule__RegularAssociation__SourceEndAssignment_3)
	{ after(grammarAccess.getRegularAssociationAccess().getSourceEndAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularAssociation__Group__4__Impl
	rule__RegularAssociation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAssociationAccess().getSourceAssignment_4()); }
	(rule__RegularAssociation__SourceAssignment_4)
	{ after(grammarAccess.getRegularAssociationAccess().getSourceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularAssociation__Group__5__Impl
	rule__RegularAssociation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAssociationAccess().getTargetEndAssignment_5()); }
	(rule__RegularAssociation__TargetEndAssignment_5)
	{ after(grammarAccess.getRegularAssociationAccess().getTargetEndAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularAssociation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAssociationAccess().getTargetAssignment_6()); }
	(rule__RegularAssociation__TargetAssignment_6)
	{ after(grammarAccess.getRegularAssociationAccess().getTargetAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularAssociation__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularAssociation__Group_0_1__0__Impl
	rule__RegularAssociation__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAssociationAccess().get_typeAssignment_0_1_0()); }
	(rule__RegularAssociation___typeAssignment_0_1_0)
	{ after(grammarAccess.getRegularAssociationAccess().get_typeAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularAssociation__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAssociationAccess().getAssociationKeyword_0_1_1()); }
	'association'
	{ after(grammarAccess.getRegularAssociationAccess().getAssociationKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularAssociation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularAssociation__Group_2__0__Impl
	rule__RegularAssociation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAssociationAccess().getAkaKeyword_2_0()); }
	'aka'
	{ after(grammarAccess.getRegularAssociationAccess().getAkaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularAssociation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAssociationAccess().getAliasAssignment_2_1()); }
	(rule__RegularAssociation__AliasAssignment_2_1)
	{ after(grammarAccess.getRegularAssociationAccess().getAliasAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerivationAssociation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__Group__0__Impl
	rule__DerivationAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationAssociationAccess().getDerivationKeyword_0()); }
	'derivation'
	{ after(grammarAccess.getDerivationAssociationAccess().getDerivationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__Group__1__Impl
	rule__DerivationAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationAssociationAccess().getNameAssignment_1()); }
	(rule__DerivationAssociation__NameAssignment_1)
	{ after(grammarAccess.getDerivationAssociationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__Group__2__Impl
	rule__DerivationAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationAssociationAccess().getGroup_2()); }
	(rule__DerivationAssociation__Group_2__0)?
	{ after(grammarAccess.getDerivationAssociationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3()); }
	(rule__DerivationAssociation__UnorderedGroup_3)
	{ after(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerivationAssociation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__Group_2__0__Impl
	rule__DerivationAssociation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationAssociationAccess().getAkaKeyword_2_0()); }
	'aka'
	{ after(grammarAccess.getDerivationAssociationAccess().getAkaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationAssociationAccess().getAliasAssignment_2_1()); }
	(rule__DerivationAssociation__AliasAssignment_2_1)
	{ after(grammarAccess.getDerivationAssociationAccess().getAliasAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerivationAssociation__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__Group_3_0__0__Impl
	rule__DerivationAssociation__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationAssociationAccess().getSourceEndAssignment_3_0_0()); }
	(rule__DerivationAssociation__SourceEndAssignment_3_0_0)
	{ after(grammarAccess.getDerivationAssociationAccess().getSourceEndAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationAssociationAccess().getDerivingAssociationAssignment_3_0_1()); }
	(rule__DerivationAssociation__DerivingAssociationAssignment_3_0_1)
	{ after(grammarAccess.getDerivationAssociationAccess().getDerivingAssociationAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerivationAssociation__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__Group_3_1__0__Impl
	rule__DerivationAssociation__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationAssociationAccess().getTargetEndAssignment_3_1_0()); }
	(rule__DerivationAssociation__TargetEndAssignment_3_1_0)
	{ after(grammarAccess.getDerivationAssociationAccess().getTargetEndAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivationAssociationAccess().getDerivedClassAssignment_3_1_1()); }
	(rule__DerivationAssociation__DerivedClassAssignment_3_1_1)
	{ after(grammarAccess.getDerivationAssociationAccess().getDerivedClassAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationEnd__Group__0__Impl
	rule__AssociationEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationEndAccess().getAssociationEndAction_0()); }
	()
	{ after(grammarAccess.getAssociationEndAccess().getAssociationEndAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationEnd__Group__1__Impl
	rule__AssociationEnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationEndAccess().getAggregationKindAssignment_1()); }
	(rule__AssociationEnd__AggregationKindAssignment_1)?
	{ after(grammarAccess.getAssociationEndAccess().getAggregationKindAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationEnd__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationEndAccess().getGroup_2()); }
	(rule__AssociationEnd__Group_2__0)?
	{ after(grammarAccess.getAssociationEndAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationEnd__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationEnd__Group_2__0__Impl
	rule__AssociationEnd__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationEndAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getAssociationEndAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationEnd__Group_2__1__Impl
	rule__AssociationEnd__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationEndAccess().getLowerBoundAssignment_2_1()); }
	(rule__AssociationEnd__LowerBoundAssignment_2_1)
	{ after(grammarAccess.getAssociationEndAccess().getLowerBoundAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationEnd__Group_2__2__Impl
	rule__AssociationEnd__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationEndAccess().getFullStopFullStopKeyword_2_2()); }
	'..'
	{ after(grammarAccess.getAssociationEndAccess().getFullStopFullStopKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationEnd__Group_2__3__Impl
	rule__AssociationEnd__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationEndAccess().getUpperBoundAssignment_2_3()); }
	(rule__AssociationEnd__UpperBoundAssignment_2_3)
	{ after(grammarAccess.getAssociationEndAccess().getUpperBoundAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationEnd__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationEndAccess().getRightSquareBracketKeyword_2_4()); }
	']'
	{ after(grammarAccess.getAssociationEndAccess().getRightSquareBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Generalization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__0__Impl
	rule__Generalization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getGeneralizationKeyword_0()); }
	'generalization'
	{ after(grammarAccess.getGeneralizationAccess().getGeneralizationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__1__Impl
	rule__Generalization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getNameAssignment_1()); }
	(rule__Generalization__NameAssignment_1)
	{ after(grammarAccess.getGeneralizationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__2__Impl
	rule__Generalization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getGroup_2()); }
	(rule__Generalization__Group_2__0)?
	{ after(grammarAccess.getGeneralizationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__3__Impl
	rule__Generalization__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getGenericAssignment_3()); }
	(rule__Generalization__GenericAssignment_3)
	{ after(grammarAccess.getGeneralizationAccess().getGenericAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getSpecificAssignment_4()); }
	(rule__Generalization__SpecificAssignment_4)
	{ after(grammarAccess.getGeneralizationAccess().getSpecificAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Generalization__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group_2__0__Impl
	rule__Generalization__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getAkaKeyword_2_0()); }
	'aka'
	{ after(grammarAccess.getGeneralizationAccess().getAkaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getAliasAssignment_2_1()); }
	(rule__Generalization__AliasAssignment_2_1)
	{ after(grammarAccess.getGeneralizationAccess().getAliasAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralizationSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__0__Impl
	rule__GeneralizationSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0()); }
	(rule__GeneralizationSet__UnorderedGroup_0)
	{ after(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__1__Impl
	rule__GeneralizationSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationsetKeyword_1()); }
	'generalizationset'
	{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationsetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__2__Impl
	rule__GeneralizationSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getNameAssignment_2()); }
	(rule__GeneralizationSet__NameAssignment_2)
	{ after(grammarAccess.getGeneralizationSetAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__3__Impl
	rule__GeneralizationSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGroup_3()); }
	(rule__GeneralizationSet__Group_3__0)?
	{ after(grammarAccess.getGeneralizationSetAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__4__Impl
	rule__GeneralizationSet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getGeneralizationSetAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__5__Impl
	rule__GeneralizationSet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationsAssignment_5()); }
	(rule__GeneralizationSet__GeneralizationsAssignment_5)*
	{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getGeneralizationSetAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralizationSet__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group_3__0__Impl
	rule__GeneralizationSet__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getAkaKeyword_3_0()); }
	'aka'
	{ after(grammarAccess.getGeneralizationSetAccess().getAkaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getAliasAssignment_3_1()); }
	(rule__GeneralizationSet__AliasAssignment_3_1)
	{ after(grammarAccess.getGeneralizationSetAccess().getAliasAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerivationAssociation__UnorderedGroup_3
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3());
	}
:
	rule__DerivationAssociation__UnorderedGroup_3__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__UnorderedGroup_3__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getDerivationAssociationAccess().getGroup_3_0()); }
					(rule__DerivationAssociation__Group_3_0__0)
					{ after(grammarAccess.getDerivationAssociationAccess().getGroup_3_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getDerivationAssociationAccess().getGroup_3_1()); }
					(rule__DerivationAssociation__Group_3_1__0)
					{ after(grammarAccess.getDerivationAssociationAccess().getGroup_3_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDerivationAssociationAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__UnorderedGroup_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__UnorderedGroup_3__Impl
	rule__DerivationAssociation__UnorderedGroup_3__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__UnorderedGroup_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivationAssociation__UnorderedGroup_3__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralizationSet__UnorderedGroup_0
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
	}
:
	rule__GeneralizationSet__UnorderedGroup_0__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__UnorderedGroup_0__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getGeneralizationSetAccess().getIsDisjointAssignment_0_0()); }
					(rule__GeneralizationSet__IsDisjointAssignment_0_0)
					{ after(grammarAccess.getGeneralizationSetAccess().getIsDisjointAssignment_0_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getGeneralizationSetAccess().getIsCompleteAssignment_0_1()); }
					(rule__GeneralizationSet__IsCompleteAssignment_0_1)
					{ after(grammarAccess.getGeneralizationSetAccess().getIsCompleteAssignment_0_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__UnorderedGroup_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__UnorderedGroup_0__Impl
	rule__GeneralizationSet__UnorderedGroup_0__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__UnorderedGroup_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__UnorderedGroup_0__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_0()); }
		ruleModelElement
		{ after(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass___typeAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().get_typeEndurantTypeEnumRuleCall_0_1_0_0()); }
		ruleEndurantType
		{ after(grammarAccess.getOntoUMLClassAccess().get_typeEndurantTypeEnumRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass___typeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().get_typeEndurantTypeEnumRuleCall_0_2_0()); }
		ruleEndurantType
		{ after(grammarAccess.getOntoUMLClassAccess().get_typeEndurantTypeEnumRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getNameStringOrIDParserRuleCall_1_0()); }
		ruleStringOrID
		{ after(grammarAccess.getOntoUMLClassAccess().getNameStringOrIDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__AliasAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getAliasStringOrIDParserRuleCall_2_1_0()); }
		ruleStringOrID
		{ after(grammarAccess.getOntoUMLClassAccess().getAliasStringOrIDParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation___typeAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAssociationAccess().get_typeRelationTypeEnumRuleCall_0_1_0_0()); }
		ruleRelationType
		{ after(grammarAccess.getRegularAssociationAccess().get_typeRelationTypeEnumRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation___typeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAssociationAccess().get_typeRelationTypeEnumRuleCall_0_2_0()); }
		ruleRelationType
		{ after(grammarAccess.getRegularAssociationAccess().get_typeRelationTypeEnumRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAssociationAccess().getNameStringOrIDParserRuleCall_1_0()); }
		ruleStringOrID
		{ after(grammarAccess.getRegularAssociationAccess().getNameStringOrIDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__AliasAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAssociationAccess().getAliasStringOrIDParserRuleCall_2_1_0()); }
		ruleStringOrID
		{ after(grammarAccess.getRegularAssociationAccess().getAliasStringOrIDParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__SourceEndAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAssociationAccess().getSourceEndAssociationEndParserRuleCall_3_0()); }
		ruleAssociationEnd
		{ after(grammarAccess.getRegularAssociationAccess().getSourceEndAssociationEndParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__SourceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAssociationAccess().getSourceOntoUMLClassCrossReference_4_0()); }
		(
			{ before(grammarAccess.getRegularAssociationAccess().getSourceOntoUMLClassStringOrIDParserRuleCall_4_0_1()); }
			ruleStringOrID
			{ after(grammarAccess.getRegularAssociationAccess().getSourceOntoUMLClassStringOrIDParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getRegularAssociationAccess().getSourceOntoUMLClassCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__TargetEndAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAssociationAccess().getTargetEndAssociationEndParserRuleCall_5_0()); }
		ruleAssociationEnd
		{ after(grammarAccess.getRegularAssociationAccess().getTargetEndAssociationEndParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularAssociation__TargetAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAssociationAccess().getTargetOntoUMLClassCrossReference_6_0()); }
		(
			{ before(grammarAccess.getRegularAssociationAccess().getTargetOntoUMLClassStringOrIDParserRuleCall_6_0_1()); }
			ruleStringOrID
			{ after(grammarAccess.getRegularAssociationAccess().getTargetOntoUMLClassStringOrIDParserRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getRegularAssociationAccess().getTargetOntoUMLClassCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivationAssociationAccess().getNameStringOrIDParserRuleCall_1_0()); }
		ruleStringOrID
		{ after(grammarAccess.getDerivationAssociationAccess().getNameStringOrIDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__AliasAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivationAssociationAccess().getAliasStringOrIDParserRuleCall_2_1_0()); }
		ruleStringOrID
		{ after(grammarAccess.getDerivationAssociationAccess().getAliasStringOrIDParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__SourceEndAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivationAssociationAccess().getSourceEndAssociationEndParserRuleCall_3_0_0_0()); }
		ruleAssociationEnd
		{ after(grammarAccess.getDerivationAssociationAccess().getSourceEndAssociationEndParserRuleCall_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__DerivingAssociationAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivationAssociationAccess().getDerivingAssociationRegularAssociationCrossReference_3_0_1_0()); }
		(
			{ before(grammarAccess.getDerivationAssociationAccess().getDerivingAssociationRegularAssociationStringOrIDParserRuleCall_3_0_1_0_1()); }
			ruleStringOrID
			{ after(grammarAccess.getDerivationAssociationAccess().getDerivingAssociationRegularAssociationStringOrIDParserRuleCall_3_0_1_0_1()); }
		)
		{ after(grammarAccess.getDerivationAssociationAccess().getDerivingAssociationRegularAssociationCrossReference_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__TargetEndAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivationAssociationAccess().getTargetEndAssociationEndParserRuleCall_3_1_0_0()); }
		ruleAssociationEnd
		{ after(grammarAccess.getDerivationAssociationAccess().getTargetEndAssociationEndParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivationAssociation__DerivedClassAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivationAssociationAccess().getDerivedClassOntoUMLClassCrossReference_3_1_1_0()); }
		(
			{ before(grammarAccess.getDerivationAssociationAccess().getDerivedClassOntoUMLClassStringOrIDParserRuleCall_3_1_1_0_1()); }
			ruleStringOrID
			{ after(grammarAccess.getDerivationAssociationAccess().getDerivedClassOntoUMLClassStringOrIDParserRuleCall_3_1_1_0_1()); }
		)
		{ after(grammarAccess.getDerivationAssociationAccess().getDerivedClassOntoUMLClassCrossReference_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__AggregationKindAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationEndAccess().getAggregationKindAggregationKindEnumRuleCall_1_0()); }
		ruleAggregationKind
		{ after(grammarAccess.getAssociationEndAccess().getAggregationKindAggregationKindEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__LowerBoundAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationEndAccess().getLowerBoundCARDINALITYTerminalRuleCall_2_1_0()); }
		RULE_CARDINALITY
		{ after(grammarAccess.getAssociationEndAccess().getLowerBoundCARDINALITYTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__UpperBoundAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationEndAccess().getUpperBoundCARDINALITYTerminalRuleCall_2_3_0()); }
		RULE_CARDINALITY
		{ after(grammarAccess.getAssociationEndAccess().getUpperBoundCARDINALITYTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getNameStringOrIDParserRuleCall_1_0()); }
		ruleStringOrID
		{ after(grammarAccess.getGeneralizationAccess().getNameStringOrIDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__AliasAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getAliasStringOrIDParserRuleCall_2_1_0()); }
		ruleStringOrID
		{ after(grammarAccess.getGeneralizationAccess().getAliasStringOrIDParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__GenericAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getGenericOntoUMLClassCrossReference_3_0()); }
		(
			{ before(grammarAccess.getGeneralizationAccess().getGenericOntoUMLClassStringOrIDParserRuleCall_3_0_1()); }
			ruleStringOrID
			{ after(grammarAccess.getGeneralizationAccess().getGenericOntoUMLClassStringOrIDParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationAccess().getGenericOntoUMLClassCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__SpecificAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getSpecificOntoUMLClassCrossReference_4_0()); }
		(
			{ before(grammarAccess.getGeneralizationAccess().getSpecificOntoUMLClassStringOrIDParserRuleCall_4_0_1()); }
			ruleStringOrID
			{ after(grammarAccess.getGeneralizationAccess().getSpecificOntoUMLClassStringOrIDParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationAccess().getSpecificOntoUMLClassCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__IsDisjointAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0_0()); }
			'disjoint'
			{ after(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__IsCompleteAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_0_1_0()); }
			'complete'
			{ after(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getNameStringOrIDParserRuleCall_2_0()); }
		ruleStringOrID
		{ after(grammarAccess.getGeneralizationSetAccess().getNameStringOrIDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__AliasAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getAliasStringOrIDParserRuleCall_3_1_0()); }
		ruleStringOrID
		{ after(grammarAccess.getGeneralizationSetAccess().getAliasStringOrIDParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__GeneralizationsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationCrossReference_5_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationStringOrIDParserRuleCall_5_0_1()); }
			ruleStringOrID
			{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationStringOrIDParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_CARDINALITY : (RULE_INT|'*');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
